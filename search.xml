<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python实现谷歌翻译PDF换行的问题]]></title>
    <url>%2F2019%2F05%2F14%2Fpython%E5%AE%9E%E7%8E%B0%E8%B0%B7%E6%AD%8C%E7%BF%BB%E8%AF%91PDF%E6%8D%A2%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[前提条件（1）浏览器 chrome（2）python编辑器：pycharm使用说明1、 pycharm上安装pyperclip、webbrowserdownloader 2、创建google_translate.py文件，并将如下代码复制粘贴至google_translate.py文件123456789101112131415#coding=utf-8import pyperclipimport webbrowsercopyBuff = ' 'num = 1#convinent to change numwhile num == 1: num = num + 1 copyedText = pyperclip.paste() if copyBuff != copyedText: copyBuff = copyedText normalizedText = copyBuff.replace('\n', ' ') url = 'https://translate.google.cn/#en/zh-CN/' + normalizedText webbrowser.open(url) 3、运行（1）在pdf上任意选择一个段落，复制 （2）运行google_translate.py程序，chrome浏览器会自动弹出一个google翻译界面，刚才复制的内容就会直接翻译 注：在换行出现‘-’的情况下，可能没有处理，即如下情况：在di-rectly这里，google翻译中没有解决，不过不影响翻译 We present the first deep learning model to successfully learn control policies di-rectly from high-dimensional sensory input using reinforcement learning.]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>随手笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo图片显示和Github上图片显示的解决办法]]></title>
    <url>%2F2019%2F05%2F14%2FHexo%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E5%92%8CGithub%E4%B8%8A%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%2F</url>
    <content type="text"><![CDATA[1、配置_config.yml文件找到博客根目录下的 _config.yml，如我的文件路径为 D:\blog\_config.yml打开_config.yml，查找 post_asset_folder字段，将post_asset_floder设置为true。如下图 2、post_asset_folder 设置为true和false的区别当post_asset_folder设置为true后，使用命令：hexo new post “新博客名称” ，创建新博客时，Hexo会自动建立一个与文章同名的文件夹，如下图 3、安装插件打开git bash，进入到博客的根目录下（如：cd d/blog/），执行命令：npm install https://github.com/CodeFalling/hexo-asset-image–save ，完成插件的安装4、图片存放将所有图片资源都放到对应的文件夹下（如：Hexo图片显示和Github上图片显示的解决办法）5、本地查看显示效果使用 hexo s 命令，运行本地博客，成功显示图片如下图 6、上传github并显示使用 hexo g -d ，重新生成并上传，浏览器输入https://ldgcug.github.io 即可查看效果 遇到过的坑：（1）图片的路径问题 图片加载格式：由两部分组成（![图片描述] + (图片路径)） 输入![logo] (图片路径)，（由于正确加载，前面的输入会变成一个图片，因此在[logo] （图片路径）中间加了一个空格，正确输入时，应去掉空格）会出现一个输入图片路径的提示，从文件中选择路径后如下图 此时，用该绝对路径上传到github后，输入https://ldgcug.github.io/，会发现，图片无法加载解决方法：将绝对路径改为相对路径 （2）图片的命名问题 不能使用”_”作为开头]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>随手笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + Github创建博客过程中踩过的坑]]></title>
    <url>%2F2019%2F05%2F14%2FHexo-Github%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91%2F</url>
    <content type="text"><![CDATA[一、系统环境配置要使用Hexo，需要在系统中支持Nodejs以及Git1、安装Node.jsNode.js官网 ​ 打开cmd命令行，输入node -v和npm -v，成功界面如下 2、安装GitGit官网 ​ 安装成功后，在电脑桌面任意空白位置，右键，出现以下界面（自行配置环境） 二、Github配置前提条件：已经拥有一个github账号，并已成功登陆1、点击【New repository】，创建一个版本仓库​ 注：仓库名称必须为username.github.io，我这里的username为ldgcug 2、创建完成后，在项目右侧，有个【Settings按钮】，点击【Settings按钮】，向下滑到【GitHub Pages】位置，能在这里发现一个网址，并且可以通过外网访问 三、安装Hexo并配置安装Hexo，在自己认为合适的地方创建文件夹，如：我是在D盘创建了一个blog文件夹，然后通过cmd命令行进入到该文件夹里面​ 输入 npm install hexo -g ，开始安装Hexo ​ 安装成功后，输入 hexo -v，能看到版本号 ​ 输入 hexo init，初始化该文件夹（此处不显示图片过程） ​ 输入 npm install ，安装所需要的组件 ​ 输入 hexo g，体验Hexo ​ 输入 hexo s，开启服务器，访问该网址，正式体验Hexo ​ 出现下图，则安装成功 四、Hexo与Github Pages联系起来1、设置Git的user name 和email（如果第一次配置）​ 注：将用户名和邮箱换成自己的用户名和邮箱 2、输入 ssh-keygen -t rsa -C “569167692@qq.com”，连续三个回车，生成密钥，查看自己的文件存储路径（默认路径为：C:\Users\Administrator\.ssh） ​ 输入 eval “$(ssh-agent -s)” ，添加密钥到 ssh-agent ​ 输入 ssh-add ~/.ssh/id_rsa ，添加生成的SSH key 到 ssh-agent ​ 输入 cd ~/.ssh，检查是否有.ssh文件夹，若没有，则进入C:\Users\Administrator\.ssh ​ 输入 ls，查看.ssh文件夹下文件 ​ 打开 id_rsa.pub文件，将其中的内容复制到缓存中 ​ 登陆Github，点击【头像】下的【setting】，点击左侧的【SSH and GPG keys】，点击【New SSH key】，将刚才复制的 id_rsa.pub 文件复制到Key中，添加ssh ​ 输入 ssh -T git@github.com ，测试添加ssh是否成功，如果看到Hi 后面是你的用户名，则添加成功 3、配置Deployment，在blog文件夹中，找到_config.yml文件，修改repo值（在文件末尾） ​ 其中，repo的值在github项目里的ssh中 ​ 注：在_config_yaml文件中，type、repo、branch文件后面有一个空格，即上图中添加的代码会变成绿色，最开始没有空格时，遇到了很多的坑 五、新建博客1、在cmd 命令种安装扩展​ 输入 ： npm install hexo-deployer-git –save 2、新建博客​ 在git bash窗口中，执行命令： hexo new post “博客名” ​ 会发现在soucrce\_posts 文件下，多出刚创建的博客.md 3、部署发布​ 使用编辑器编辑好文章后，使用命令： hexo d -g ，就可以生成和部署了 ​ 部署成功后，访问你的地址：http//用户名.github.io 。就能看到刚生成的文章。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>随手笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F05%2F13%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>随手笔记</tag>
      </tags>
  </entry>
</search>
